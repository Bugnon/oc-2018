<!DOCTYPE aesl-source>
<network>


<!--list of global events-->
<event size="1" name="pair_run"/>


<!--list of constants-->


<!--show keywords state-->
<keywords flag="true"/>


<!--node thymio-II-->
<node nodeId="57643" name="thymio-II">########Début_des_définitions_des_variables#######

# variables pour les états
var state[4] = [0,0,0,0]
var new_state[4] = [0,0,0,0]

#Pour Montre:
var h = 0 #heure

var m = 0 #minute

var s = 0 #seconde

#Chronomètre:
var c_h = 0 #heure

var c_m = 0 #minute

var c_s = 0 #seconde

#Alarme:
var a_h = 0 #heure

var a_m = 0 #minutes

var a_s = 0 #seconde

#Timer:
var t_h = 0 #heure

var t_m = 0 #heure

var t_s = 0 #seconde
timer.period[0]=1000


########Fin_des_définitions_des_variables#######


#######Début-du-Hub#######



# reset outputs
call sound.system(-1)
call leds.top(0,0,0)
call leds.bottom.left(0,0,0)
call leds.bottom.right(0,0,0)
call leds.circle(0,0,0,0,0,0,0,0)

# subroutine to display the current state
sub display_state
call leds.top((state[2]*32),(state[1]*32),(state[3]*32))

onevent buttons
	when button.center == 1 do
		if state[0] == 0 and state[1] == 0 and state[2] == 0 and state[3] == 0 then
			new_state[0] = 0
			new_state[1] = 0
			new_state[2] = 1
			new_state[3] = 0
			emit pair_run 0
		end
	end

	when button.center == 1 do
		if state[0] == 0 and state[1] == 0 and state[2] == 1 and state[3] == 0 then
			new_state[0] = 0
			new_state[1] = 1
			new_state[2] = 0
			new_state[3] = 0
			emit pair_run 1
		end
	end

	when button.center == 1 do
		if state[0] == 0 and state[1] == 1 and state[2] == 0 and state[3] == 0 then
			new_state[0] = 0
			new_state[1] = 0
			new_state[2] = 0
			new_state[3] = 1
			emit pair_run 2
		end
	end

	when button.center == 1 do
		if state[0] == 0 and state[1] == 0 and state[2] == 0 and state[3] == 1 then
			new_state[0] = 0
			new_state[1] = 0
			new_state[2] = 0
			new_state[3] = 0
			emit pair_run 3
		end
	end

	call math.copy(state, new_state)
	callsub display_state

########FIN_DU_HUB#########

########Début_Du_Timer########

onevent timer0
t_s--
if  t_s==0 then 
t_s = 59
t_m--
	
end
#Il faut aujouter que quand il arrive à t_s = 0 et t_m = 0 alors le timer s'arrête et sonne. 

########Fin_du_Timer#########

########Début_de_l'incrémentation_######

onevent button.forward #ajouter les secondes
t_s++
if t_s==60 then
t_s = 0
t_m++
	
end

onevent button.backward #ajouter les minutes
t_m++
if t_m==60 then
t_m=0
t_s=0
	
end

#je ne comprend pas pourquoi ça aujoute 2 à 2 

########Fin_de_l'incrémentation#######

########début_de_l_affichage#########

 call leds.circle((t_m&amp;1)*32, (t_m&amp;2)*16, (t_m&amp;4)*8,  (t_m&amp;8)*4, (t_m&amp;16)*2, t_m&amp;32, (t_m&amp;64)/2, (t_m&amp;128)/4)#affichage minutes
 
 
# call leds.prox.h ((t_s&amp;amp,32), (t_s&amp;amp,16)*2, (t_s&amp;amp,8)*4, (t_s&amp;amp,4)*8, (t_s&amp;amp,2)*16, (t_s&amp;amp,1)*32, 0, 0)#Je n'arrive pas à éteindre les leds quand on s'approche et je n'arrive pas à faire la séquence

##########fin_de_l_affichage########## 
 </node>


</network>
